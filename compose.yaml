services:
  client-service:
    container_name: client-service
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    environment:
      - APP_NAME=client-service
      - PRODUCTION=true
      - API_URL=http://137.184.91.177
    networks:
      - app_network

  backend-service:
    container_name: backend-service
    build:
      context: ./back-csharp
      dockerfile: Dockerfile
    ports:
      - 5268:5268
      - 7167:7167
    environment:
      - APP_NAME=backend-app
      - ASPNETCORE_ENVIRONMENT=PRODUCTION
      - ConnectionStrings__TeachersDB=Host=postgres-db;Database=teachers;Username=joseap;Password=J1o2s3e4
      - Servers__Axum=http://axum-server:3000
    depends_on:
      - postgres-db
    networks:
      - app_network

  axum-server:
    container_name: axum-server
    build:
      context: ./axum_server
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    networks:
      - app_network

  postgres-db:
    container_name: postgres-db
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    ports:
      - 5432:5432
    environment:
      - APP_NAME=postgres-app
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=J1o2s3e4
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  proxyserver-service:
    container_name: proxyserver-app
    build:
      context: ./proxyserver
      dockerfile: Dockerfile
    ports:
      - 80:80
    environment:
      - APP_NAME=proxyserver-app
    depends_on:
      - backend-service
      - axum-server
    volumes:
      - ./client/dist/client:/usr/share/nginx/html:ro
      - ./proxyserver/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app_network

volumes:
  postgres_data:
  client-service:
    external: false

networks:
  app_network:
    driver: bridge
