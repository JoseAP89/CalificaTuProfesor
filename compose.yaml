services:
    client-service:
        restart: always
        container_name: client-service
        build: 
            context: ./client
            dockerfile: Dockerfile
        ports: 
            - 4200:4200
        environment:
            - APP_NAME=client-service
            - PRODUCTION=false
            - API_URL=http://localhost:8080
        post_start:
          - command: node /app/replace-env.js # set up the environment variables
        depends_on:
            proxyserver-service:
                condition: service_started
                restart: true
        develop:
            watch: 
                - action: sync
                  path: ./client  
                  target: /app
                  ignore: 
                    - ./client/node_modules
                - action: rebuild
                  path: ./client/package.json
                - action: sync+restart
                  path: ./back-csharp
                  target: /app
        networks:
            - app_network

    backend-service:
        restart: always
        container_name: backend-service
        build: 
            context: ./back-csharp
            dockerfile: Dockerfile
        ports: 
            - 5268:5268
            - 7167:7167
        environment:
            - APP_NAME=backend-app
            - ASPNETCORE_ENVIRONMENT=Development
            - ConnectionStrings__TeachersDB=Host=postgres-db;Database=teachers;Username=joseap;Password=J1o2s3e4
        depends_on:
            - postgres-db
        develop:
            watch: 
                - action: rebuild
                  path: ./back-csharp
                  target: /app
                - action: rebuild
                  path: ./back-csharp/back-csharp.csproj
        networks:
            - app_network

    postgres-db:
        container_name: postgres-db
        build: 
            context: ./postgresql
            dockerfile: Dockerfile
        ports: 
            - 5432:5432
        environment:
            - APP_NAME=postgres-app
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=J1o2s3e4
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app_network
        
    proxyserver-service:
        restart: always
        environment:
            - APP_NAME=proxyserver-app
        container_name: proxyserver-app
        build: 
            context: ./proxyserver
            dockerfile: Dockerfile
        ports: 
            - 8080:80
        depends_on:
            backend-service:
                condition: service_started
                restart: true
        develop:
            watch: 
                - action: sync+restart
                  path: ./back-csharp
                  target: /app
        networks:
            - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
            
            
